{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soham\\\\wordle\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./index.css\"; // make sure this line is here\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [guesses, setGuesses] = useState([]);\n  const [currentWord, setCurrentWord] = useState(\"\");\n  const [currentResult, setCurrentResult] = useState(\"\");\n  const [remainingWords, setRemainingWords] = useState([]);\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (currentWord.length !== 5 || currentResult.length !== 5) {\n      setError(\"Both fields must be exactly 5 characters.\");\n      return;\n    }\n    const newGuesses = [...guesses, {\n      word: currentWord,\n      result: currentResult\n    }];\n    setGuesses(newGuesses);\n    if (currentResult === \"ggggg\") {\n      alert(\"🎉 You solved it! Resetting...\");\n      resetGame();\n      return;\n    }\n    try {\n      const res = await fetch(\"http://localhost:5000/solve\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          guesses: newGuesses\n        })\n      });\n      const data = await res.json();\n      setRemainingWords(data.remaining);\n      setError(\"\");\n    } catch (err) {\n      setError(\"❌ Couldn't connect to server.\");\n    }\n    setCurrentWord(\"\");\n    setCurrentResult(\"\");\n  };\n  const resetGame = () => {\n    setGuesses([]);\n    setCurrentWord(\"\");\n    setCurrentResult(\"\");\n    setRemainingWords([]);\n    setError(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83E\\uDDE0 Wordle Solver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Guess (e.g. crane)\",\n        value: currentWord,\n        onChange: e => setCurrentWord(e.target.value.toLowerCase())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Result (e.g. bygyg)\",\n        value: currentResult,\n        onChange: e => setCurrentResult(e.target.value.toLowerCase())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), guesses.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Guess History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: guesses.map((g, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            children: g.word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), \" \\u2014 \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: g.result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 41\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), remainingWords.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Remaining Possible Words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-grid\",\n        children: remainingWords.map((word, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-tile\",\n          children: word\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IvcABsh4+Wc93GiB5Ake1Zma6G8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","guesses","setGuesses","currentWord","setCurrentWord","currentResult","setCurrentResult","remainingWords","setRemainingWords","error","setError","handleSubmit","e","preventDefault","length","newGuesses","word","result","alert","resetGame","res","fetch","method","headers","body","JSON","stringify","data","json","remaining","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","toLowerCase","style","color","textAlign","map","g","i","className","_c","$RefreshReg$"],"sources":["C:/Users/soham/wordle/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\"; // make sure this line is here\n\nfunction App() {\n  const [guesses, setGuesses] = useState([]);\n  const [currentWord, setCurrentWord] = useState(\"\");\n  const [currentResult, setCurrentResult] = useState(\"\");\n  const [remainingWords, setRemainingWords] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentWord.length !== 5 || currentResult.length !== 5) {\n      setError(\"Both fields must be exactly 5 characters.\");\n      return;\n    }\n\n    const newGuesses = [...guesses, { word: currentWord, result: currentResult }];\n    setGuesses(newGuesses);\n\n    if (currentResult === \"ggggg\") {\n      alert(\"🎉 You solved it! Resetting...\");\n      resetGame();\n      return;\n    }\n\n    try {\n      const res = await fetch(\"http://localhost:5000/solve\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ guesses: newGuesses }),\n      });\n\n      const data = await res.json();\n      setRemainingWords(data.remaining);\n      setError(\"\");\n    } catch (err) {\n      setError(\"❌ Couldn't connect to server.\");\n    }\n\n    setCurrentWord(\"\");\n    setCurrentResult(\"\");\n  };\n\n  const resetGame = () => {\n    setGuesses([]);\n    setCurrentWord(\"\");\n    setCurrentResult(\"\");\n    setRemainingWords([]);\n    setError(\"\");\n  };\n\n  return (\n    <div>\n      <h1>🧠 Wordle Solver</h1>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Guess (e.g. crane)\"\n          value={currentWord}\n          onChange={(e) => setCurrentWord(e.target.value.toLowerCase())}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Result (e.g. bygyg)\"\n          value={currentResult}\n          onChange={(e) => setCurrentResult(e.target.value.toLowerCase())}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      {error && <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>}\n\n      {guesses.length > 0 && (\n        <>\n          <h2>Guess History</h2>\n          <ul>\n            {guesses.map((g, i) => (\n              <li key={i}>\n                <code>{g.word}</code> — <code>{g.result}</code>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n\n      {remainingWords.length > 0 && (\n        <>\n          <h2>Remaining Possible Words</h2>\n          <div className=\"word-grid\">\n            {remainingWords.map((word, i) => (\n              <div className=\"word-tile\" key={i}>\n                {word}\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMiB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIV,WAAW,CAACW,MAAM,KAAK,CAAC,IAAIT,aAAa,CAACS,MAAM,KAAK,CAAC,EAAE;MAC1DJ,QAAQ,CAAC,2CAA2C,CAAC;MACrD;IACF;IAEA,MAAMK,UAAU,GAAG,CAAC,GAAGd,OAAO,EAAE;MAAEe,IAAI,EAAEb,WAAW;MAAEc,MAAM,EAAEZ;IAAc,CAAC,CAAC;IAC7EH,UAAU,CAACa,UAAU,CAAC;IAEtB,IAAIV,aAAa,KAAK,OAAO,EAAE;MAC7Ba,KAAK,CAAC,gCAAgC,CAAC;MACvCC,SAAS,CAAC,CAAC;MACX;IACF;IAEA,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QACrDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEzB,OAAO,EAAEc;QAAW,CAAC;MAC9C,CAAC,CAAC;MAEF,MAAMY,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7BpB,iBAAiB,CAACmB,IAAI,CAACE,SAAS,CAAC;MACjCnB,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOoB,GAAG,EAAE;MACZpB,QAAQ,CAAC,+BAA+B,CAAC;IAC3C;IAEAN,cAAc,CAAC,EAAE,CAAC;IAClBE,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,MAAMa,SAAS,GAAGA,CAAA,KAAM;IACtBjB,UAAU,CAAC,EAAE,CAAC;IACdE,cAAc,CAAC,EAAE,CAAC;IAClBE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,iBAAiB,CAAC,EAAE,CAAC;IACrBE,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEd,OAAA;IAAAmC,QAAA,gBACEnC,OAAA;MAAAmC,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzBvC,OAAA;MAAMwC,QAAQ,EAAEzB,YAAa;MAAAoB,QAAA,gBAC3BnC,OAAA;QACEyC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAEpC,WAAY;QACnBqC,QAAQ,EAAG5B,CAAC,IAAKR,cAAc,CAACQ,CAAC,CAAC6B,MAAM,CAACF,KAAK,CAACG,WAAW,CAAC,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,eACFvC,OAAA;QACEyC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,qBAAqB;QACjCC,KAAK,EAAElC,aAAc;QACrBmC,QAAQ,EAAG5B,CAAC,IAAKN,gBAAgB,CAACM,CAAC,CAAC6B,MAAM,CAACF,KAAK,CAACG,WAAW,CAAC,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eACFvC,OAAA;QAAQyC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EAEN1B,KAAK,iBAAIb,OAAA;MAAG+C,KAAK,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAd,QAAA,EAAEtB;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAErElC,OAAO,CAACa,MAAM,GAAG,CAAC,iBACjBlB,OAAA,CAAAE,SAAA;MAAAiC,QAAA,gBACEnC,OAAA;QAAAmC,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBvC,OAAA;QAAAmC,QAAA,EACG9B,OAAO,CAAC6C,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAChBpD,OAAA;UAAAmC,QAAA,gBACEnC,OAAA;YAAAmC,QAAA,EAAOgB,CAAC,CAAC/B;UAAI;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,YAAG,eAAAvC,OAAA;YAAAmC,QAAA,EAAOgB,CAAC,CAAC9B;UAAM;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GADxCa,CAAC;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,eACL,CACH,EAEA5B,cAAc,CAACO,MAAM,GAAG,CAAC,iBACxBlB,OAAA,CAAAE,SAAA;MAAAiC,QAAA,gBACEnC,OAAA;QAAAmC,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjCvC,OAAA;QAAKqD,SAAS,EAAC,WAAW;QAAAlB,QAAA,EACvBxB,cAAc,CAACuC,GAAG,CAAC,CAAC9B,IAAI,EAAEgC,CAAC,kBAC1BpD,OAAA;UAAKqD,SAAS,EAAC,WAAW;UAAAlB,QAAA,EACvBf;QAAI,GADyBgC,CAAC;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE5B,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,eACN,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnC,EAAA,CAnGQD,GAAG;AAAAmD,EAAA,GAAHnD,GAAG;AAqGZ,eAAeA,GAAG;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}